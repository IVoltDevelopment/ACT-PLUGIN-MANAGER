
using System;
using System.Collections.Generic;
using System.Reflection;

namespace ACT.PluginManager.Interfaces
{
	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Interface for cached assembly. </summary>
	/// <remarks>	Mark Alicz, 1/17/2024. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	public interface I_Cached_Assembly
	{
		#region Properties

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Gets or sets the identifier of the assembly cache. </summary>
		///
		/// <value>	The identifier of the assembly cache. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		Guid? Assembly_CacheID { get; set; }

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Gets or sets the full pathname of the full plugin DLL file. </summary>
		///
		/// <value>	The full pathname of the full plugin DLL file. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		string Full_PluginDLL_Path { get; set; }

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Gets or sets the type of the assembly. </summary>
		///
		/// <value>	The type of the assembly. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		List<Type> Assembly_Types { get; set; }

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Gets or sets the name of the plugin. </summary>
		///
		/// <value>	The name of the plugin. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		string PluginName { get; set; }

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Gets or sets the loaded assembly. </summary>
		///
		/// <value>	The loaded assembly. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		Assembly Loaded_Assembly { get; set; }

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Gets or sets the Date/Time of the date loaded. </summary>
		///
		/// <value>	The date loaded. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		DateTime DateLoaded { get; set; }

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Gets information describing the plugin. </summary>
		///
		/// <value>	Information describing the plugin. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////
		string PluginInfo { get; }

		#endregion

		#region Methods

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Initializes the plugin. </summary>
		///
		/// <param name="PluginDLL_Path">  	Full pathname of the plugin DLL file. </param>
		/// <param name="Plugin_Name">	  	Name of the plugin. </param>
		/// <param name="AssemblyToAdd">	  	The assembly to add. </param>
		/// <param name="assembly_CacheID">	Identifier for the assembly cache. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		void Init_Plugin(string PluginDLL_Path, string Plugin_Name, Assembly AssemblyToAdd, Guid? assembly_CacheID);

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Gets the version. </summary>
		///
		/// <returns>	The version. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		string GetVersion();

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Creates new cached assembly from DLL. </summary>
		///
		/// <param name="PluginDLL_Path">  	Full pathname of the plugin DLL file. </param>
		/// <param name="Plugin_Name">	  	Name of the plugin. </param>
		/// <param name="AssemblyToAdd">	  	The assembly to add. </param>
		/// <param name="assembly_CacheID">	Identifier for the assembly cache. </param>
		///
		/// <returns>	The new new cached assembly from DLL. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		I_Cached_Assembly CreateNew_Cached_Assembly_FromDLL(string PluginDLL_Path, string Plugin_Name, Assembly AssemblyToAdd, Guid? assembly_CacheID);

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Adds an assembly types. </summary>
		///
		/// <param name="types">	The types. </param>
		///
		/// <returns>	An int. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		int Add_Assembly_Types(List<Type> types);
		#endregion
	}

}
